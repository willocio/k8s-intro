# Instalar ArgoCD
kubectl create namespace argocd
kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml

# Editar deploy argocd-server
kubectl edit deploy -n argocd argocd-server
# add abaixo de - /usr/local/bin/argocd-server
- --insecure

# Criar ingress para o ArgoCD Server
kubectl apply -f ingress-traefik-argocd.yml

# adicionar os dominios ao /etc/hosts (se usar o WSL, editar no Windows)
127.0.0.1 argocd.local

# obter password do ArgoCD (user: admin)
kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" |
base64 -d && echo

# logar no ArgoCD por comando
argocd login argocd.local

# obter context do cluster atual
kubectl config current-context

# add o cluster ao ArgoCD
argocd cluster add <nome-do-context> --in-cluster

# verificando se o cluster foi adicionado
argocd cluster list

# criando o app no ArgoCD (atualização manual)
argocd app create web-color --repo https://github.com/willocio/k8s-intro.git --path web --dest-server https://kubernetes.default.svc --dest-namespace web

# atualizando o app no ArgoCD (atualização automatica)
argocd app create web-color --repo https://github.com/willocio/k8s-intro.git --path web --dest-server https://kubernetes.default.svc --dest-namespace web --sync-policy auto --self-heal --upsert

# criando app com arquivo yaml
kubectl apply -f app-web-color.yml

# listando o app
argocd app list

# estado do app
argocd app get web-color

# sincronizando o app
argocd app sync web-color